{{ $defaultSA := include  "eso-secrets.serviceAccountName" . }}
{{ $rel := .Release }}
{{- if .Values.externalSecretOperator.vaultSecretStore.enabled }}
---
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: {{ include "eso-secrets.fullname" . }}-secret-store
  namespace: {{ .Release.Namespace }}
spec:
  provider:
    vault:
      server: "{{ .Values.externalSecretOperator.vaultSecretStore.server }}"
      path: "{{ .Values.externalSecretOperator.vaultSecretStore.path }}"
      version: "{{ .Values.externalSecretOperator.vaultSecretStore.version }}"
      auth:
        kubernetes:
          mountPath: "{{ .Values.externalSecretOperator.vaultSecretStore.mountPath }}"
          role: "{{ .Values.externalSecretOperator.vaultSecretStore.role }}"
          serviceAccountRef:
            name: "{{ $defaultSA }}"
---
# Use the Vault Client's JWT as the Reviewer JWT
# https://developer.hashicorp.com/vault/docs/auth/kubernetes#use-the-vault-client-s-jwt-as-the-reviewer-jwt
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
   name: {{ include "eso-secrets.fullname" . }}-secret-store-tokenreview
roleRef:
   apiGroup: rbac.authorization.k8s.io
   kind: ClusterRole
   name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: {{ $defaultSA }}
  namespace: {{ $rel.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "eso-secrets.fullname" . }}-secret-store-issuer
rules:
  - apiGroups: ['']
    resources: ['serviceaccounts/token']
    resourceNames: ["{{ $defaultSA }}"]
    verbs: ['create']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "eso-secrets.fullname" . }}-secret-store-issuer
subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "eso-secrets.fullname" . }}-secret-store-issuer
{{- end }}
