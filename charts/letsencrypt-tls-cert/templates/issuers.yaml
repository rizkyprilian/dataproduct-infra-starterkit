{{- $relNamespace := .Release.Namespace -}}

{{- if .Values.globalIssuer.create }}
---
apiVersion: cert-manager.io/v1
kind: {{ .Values.globalIssuer.kind | default "ClusterIssuer" }}
metadata:
  name: {{ include "letsencrypt-tls-cert.fullname" . }}-global-issuer
  {{- if eq (.Values.globalIssuer.kind | default "ClusterIssuer") "Issuer" }}
  namespace: {{ $relNamespace }}
  {{- end }}
  labels:
    {{- include "letsencrypt-tls-cert.labels" . | nindent 4 }}
spec:
  acme:
    server: {{ .Values.globalIssuer.server | default "https://acme-v02.api.letsencrypt.org/directory" }}
    email: {{ .Values.globalIssuer.email | required "globalIssuer.email is required when globalIssuer.create is true" }}
    privateKeySecretRef:
      name: {{ .Values.globalIssuer.privateKeySecretName | default "letsencrypt-account-key" }}
    {{- with .Values.globalIssuer.solvers }}
    solvers:
      {{- toYaml . | nindent 6 }}
    {{- end }}
{{- end }}

{{- range $i, $cert := .Values.certificates }}
{{- if and (hasKey $cert "issuer") (hasKey $cert.issuer "create") $cert.issuer.create }}
{{- if eq ($cert.issuer.kind | default "ClusterIssuer") "Issuer" }}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ $cert.issuer.name | trim | lower }}
  namespace: {{ $relNamespace }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    helm.sh/chart: {{ include "letsencrypt-tls-cert.chart" $ }}
spec:
  acme:
    server: {{ $cert.issuer.acme.server | default "https://acme-v02.api.letsencrypt.org/directory" }}
    email: {{ $cert.issuer.acme.email | required (printf "certificates[%d].issuer.acme.email is required when issuer.create is true" $i) }}
    privateKeySecretRef:
      name: {{ $cert.issuer.acme.privateKeySecretName | default (printf "%s-key" ($cert.issuer.name | trim | lower)) }}
    {{- with $cert.issuer.acme.solvers }}
    solvers:
      {{- toYaml . | nindent 6 }}
    {{- end }}
{{- else if eq ($cert.issuer.kind | default "ClusterIssuer") "ClusterIssuer" }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ $cert.issuer.name | trim | lower }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    helm.sh/chart: {{ include "letsencrypt-tls-cert.chart" $ }}
spec:
  acme:
    server: {{ $cert.issuer.acme.server | default "https://acme-v02.api.letsencrypt.org/directory" }}
    email: {{ $cert.issuer.acme.email | required (printf "certificates[%d].issuer.acme.email is required when issuer.create is true" $i) }}
    privateKeySecretRef:
      name: {{ $cert.issuer.acme.privateKeySecretName | default (printf "%s-key" ($cert.issuer.name | trim | lower)) }}
    {{- with $cert.issuer.acme.solvers }}
    solvers:
      {{- toYaml . | nindent 6 }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}
